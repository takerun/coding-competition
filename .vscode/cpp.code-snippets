{
    "[Initialization] G++ Code": {
        "prefix": "g++",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "#define fastIO() ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)",
            "#define endl \"\\n\"",
            "#define rep(i, n) for (int i = 0; i < (int)(n); i++)",
            "#define rep_ft(i, f, t) for (int i = f; i < (int)(t); i++)",
            "#define all(x) std::begin(x), std::end(x)",
            "typedef long long int int64;",
            "",
            "int main()",
            "{",
            "    fastIO();",
            "",
            "    // logic",
            "",
            "    cout << endl;",
            "    return 0;",
            "}"
        ],
        "description": "G++ Code"
    },
    "[Def] vector1": {
        "prefix": "vector1d",
        "body": "vector<int> x(n);",
        "description": "1D vector"
    },
    "[Def] vector2": {
        "prefix": "vector2d",
        "body": "vector<vector<int>> xy(n, vector<int>(n));",
        "description": "2D vector"
    },
    "modint998244353": {
        "prefix": "modint998244353",
        "body": [
            "#include<atcoder/modint>",
            "using mint=atcoder::modint998244353;"
        ],
        "description": "modint998244353"
    },
    "modint1000000007": {
        "prefix": "modint1000000007",
        "body": [
            "#include<atcoder/modint>",
            "using mint=atcoder::modint1000000007;"
        ],
        "description": "modint1000000007"
    },
    "[Input] 1D": {
        "prefix": "input1d",
        "body": [
            "rep(i, N)",
            "{",
            "    cin >> x[i];",
            "}",
        ],
        "description": "1D input"
    },
    "[Input] 2D": {
        "prefix": "input2d",
        "body": [
            "rep(i, H)",
            "{",
            "    rep(j, W)",
            "    {",
            "        cin >> G.at(i).at(j);",
            "    }",
            "}"
        ],
        "description": "2D input"
    },
    "[Input] 1D Cumulative": {
        "prefix": "cumul1d",
        "body": [
            "int N;",
            "cin >> N;",
            "vector<int> x(N), cuml(N+1);",
            "cuml[0] = 0;",
            "rep(i, N)",
            "{",
            "    cin >> x[i];",
            "    cuml[i + 1] = cuml[i] + x[i];",
            "}"
        ],
        "description": "1d cumulative input"
    },
    "[Input] each string": {
        "prefix": "string1d",
        "body": [
            "string astr;",
            "vector<int> a;",
            "int Asize;",
            "cin >> astr;",
            "Asize = astr.size();",
            "rep(i, Asize)",
            "{",
            "    a.emplace_back(astr[i] - '0');",
            "}",
        ],
        "description": "each sting input"
    },
    "[Measure] manhattan distance": {
        "prefix": "mandistance",
        "body": [
            "int distance = 0;",
            "rep(i, N)",
            "{",
            "    distance += abs(x[i] - y[i]);",
            "}",
        ],
        "description": "manhattan distance"
    },
    "[Method] retrieving max in vector": {
        "prefix": "maxvec1d",
        "body": "*max_element(all(x))",
        "description": "max in vactor"
    },
    "[Method] retrieving sum in stack": {
        "prefix": "sumstack1d",
        "body": [
            "int sum = 0;",
            "while (!s.empty())",
            "{",
            "    sum = sum + s.top();",
            "    s.pop();",
            "}",
        ],
        "description": "sum in stack"
    }
}